<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Utilisateur', 'doctrine');

/**
 * BaseUtilisateur
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id_utilisateur
 * @property string $nom
 * @property string $prenom
 * @property string $login
 * @property string $password
 * @property integer $type
 * @property Doctrine_Collection $Rdv
 * @property Doctrine_Collection $TraitementAgent
 * @property Doctrine_Collection $Vente
 * @property Doctrine_Collection $Dispatch
 * @property Doctrine_Collection $Rappel
 * 
 * @method integer             getIdUtilisateur()   Returns the current record's "id_utilisateur" value
 * @method string              getNom()             Returns the current record's "nom" value
 * @method string              getPrenom()          Returns the current record's "prenom" value
 * @method string              getLogin()           Returns the current record's "login" value
 * @method string              getPassword()        Returns the current record's "password" value
 * @method integer             getType()            Returns the current record's "type" value
 * @method Doctrine_Collection getRdv()             Returns the current record's "Rdv" collection
 * @method Doctrine_Collection getTraitementAgent() Returns the current record's "TraitementAgent" collection
 * @method Doctrine_Collection getVente()           Returns the current record's "Vente" collection
 * @method Doctrine_Collection getDispatch()        Returns the current record's "Dispatch" collection
 * @method Doctrine_Collection getRappel()          Returns the current record's "Rappel" collection
 * @method Utilisateur         setIdUtilisateur()   Sets the current record's "id_utilisateur" value
 * @method Utilisateur         setNom()             Sets the current record's "nom" value
 * @method Utilisateur         setPrenom()          Sets the current record's "prenom" value
 * @method Utilisateur         setLogin()           Sets the current record's "login" value
 * @method Utilisateur         setPassword()        Sets the current record's "password" value
 * @method Utilisateur         setType()            Sets the current record's "type" value
 * @method Utilisateur         setRdv()             Sets the current record's "Rdv" collection
 * @method Utilisateur         setTraitementAgent() Sets the current record's "TraitementAgent" collection
 * @method Utilisateur         setVente()           Sets the current record's "Vente" collection
 * @method Utilisateur         setDispatch()        Sets the current record's "Dispatch" collection
 * @method Utilisateur         setRappel()          Sets the current record's "Rappel" collection
 * 
 * @package    juriste
 * @subpackage model
 * @author     Nacef LABIDI <nacef.labidi@gmail.com>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseUtilisateur extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('utilisateur');
        $this->hasColumn('id_utilisateur', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('nom', 'string', 45, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 45,
             ));
        $this->hasColumn('prenom', 'string', 45, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 45,
             ));
        $this->hasColumn('login', 'string', 45, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 45,
             ));
        $this->hasColumn('password', 'string', 45, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 45,
             ));
        $this->hasColumn('type', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Rdv', array(
             'local' => 'id_utilisateur',
             'foreign' => 'id_avocat'));

        $this->hasMany('TraitementAgent', array(
             'local' => 'id_utilisateur',
             'foreign' => 'id_agent'));

        $this->hasMany('Vente', array(
             'local' => 'id_utilisateur',
             'foreign' => 'id_agent'));

        $this->hasMany('Dispatch', array(
             'local' => 'id_utilisateur',
             'foreign' => 'id_agent'));

        $this->hasMany('Rappel', array(
             'local' => 'id_utilisateur',
             'foreign' => 'id_agent'));
    }
}